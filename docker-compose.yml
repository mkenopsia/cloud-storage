services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_container
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
#    volumes:
#      - postgres_/var/lib/postgresql/data
    volumes:
      - postgres_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 2s
      timeout: 2s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis_container
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6380:6379"

  minio:
    image: minio/minio:latest
    container_name: minio_container
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: ["server", "/data", "--console-address", ":9001"]

  app:
    build: .
    container_name: cloud-storage-backend
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
    ports:
      - "8080:8080"

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local